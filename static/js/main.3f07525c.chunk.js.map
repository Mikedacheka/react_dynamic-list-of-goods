{"version":3,"sources":["components/GoodsList.tsx","api/goods.tsx","App.tsx","index.tsx"],"names":["GoodsList","goods","map","good","style","color","name","id","API_URL","getAll","a","fetch","response","json","sort","goodA","goodB","localeCompare","slice","filter","App","state","getGoodsHandler","getGoods","setState","this","goodsAPI","type","onClick","React","PureComponent","ReactDOM","render","document","getElementById"],"mappings":"2RAMaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,6BACIA,EAAMC,KAAI,SAACC,GAAD,OACV,oBAEEC,MAAO,CAAEC,MAAOF,EAAKE,OAFvB,SAIGF,EAAKG,MAHDH,EAAKI,UCTZC,EAAO,wEAEN,SAAeC,IAAtB,+B,4CAAO,8BAAAC,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,gBAEeA,EAASC,OAFxB,cAECZ,EAFD,yBAIEA,GAJF,4C,kEAOA,8BAAAS,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,gBAEeA,EAASC,OAFxB,cAECZ,EAFD,yBAIE,YAAIA,GAAOa,MAAK,SAACC,EAAaC,GAAd,OACrBD,EAAMT,KAAKW,cAAcD,EAAMV,SAC9BY,MAAM,EAAG,IANP,4C,kEASA,8BAAAR,EAAA,sEACkBC,MAAMH,GADxB,cACCI,EADD,gBAEeA,EAASC,OAFxB,cAECZ,EAFD,yBAIE,YAAIA,GAAOkB,QAAO,SAAChB,GAAD,MACR,QAAfA,EAAKE,UALF,4C,sBCRA,IAAMe,EAAb,4MACEC,MAAe,CACbpB,MAAO,IAFX,EASEqB,gBATF,uCASoB,WAAOC,GAAP,eAAAb,EAAA,sEACIa,EADJ,OACVtB,EADU,OAGhB,EAAKuB,SAAS,CACZvB,MAAM,YAAKA,KAJG,2CATpB,6GAKE,WACEwB,KAAKH,gBAAgBI,OANzB,oBAiBE,WAAU,IAAD,OACCzB,EAAUwB,KAAKJ,MAAfpB,MAER,OACE,qCACE,uDACA,wBACE0B,KAAK,SACLC,QAAS,kBACP,EAAKN,gBAAgBI,MAHzB,qBAQA,wBACEC,KAAK,SACLC,QAAS,kBACP,EAAKN,gBDnCV,WAAP,+BCmCiCI,KAHzB,mBAQA,wBACEC,KAAK,SACLC,QAAS,kBACP,EAAKN,gBDlCV,WAAP,+BCkCiCI,KAHzB,2BAQA,cAAC,EAAD,CAAWzB,MAAOA,WA/C1B,GAAyB4B,IAAMC,eCR/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.3f07525c.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  goods: Good[],\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    { goods.map((good) => (\n      <li\n        key={good.id}\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport async function getAll() {\n  const response = await fetch(API_URL);\n  const goods = await response.json();\n\n  return goods;\n}\n\nexport async function getFirstFive() {\n  const response = await fetch(API_URL);\n  const goods = await response.json();\n\n  return [...goods].sort((goodA: Good, goodB: Good) => (\n    goodA.name.localeCompare(goodB.name)\n  )).slice(0, 5);\n}\n\nexport async function getRedGoods() {\n  const response = await fetch(API_URL);\n  const goods = await response.json();\n\n  return [...goods].filter((good: Good) => (\n    good.color === 'red'\n  ));\n}\n","import React from 'react';\nimport './App.scss';\n\nimport { GoodsList } from './components/GoodsList';\nimport * as goodsAPI from './api/goods';\n\ntype Props = {};\ntype State = {\n  goods: Good[],\n};\n\nexport class App extends React.PureComponent<Props, State> {\n  state: State = {\n    goods: [],\n  };\n\n  componentDidMount() {\n    this.getGoodsHandler(goodsAPI.getAll());\n  }\n\n  getGoodsHandler = async (getGoods: Promise<Good[]>) => {\n    const goods = await getGoods;\n\n    this.setState({\n      goods: [...goods],\n    });\n  };\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <>\n        <h1>Dynamic list of Goods</h1>\n        <button\n          type=\"button\"\n          onClick={() => (\n            this.getGoodsHandler(goodsAPI.getAll())\n          )}\n        >\n          Get all\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => (\n            this.getGoodsHandler(goodsAPI.getFirstFive())\n          )}\n        >\n          Get 5\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => (\n            this.getGoodsHandler(goodsAPI.getRedGoods())\n          )}\n        >\n          Get red goods\n        </button>\n        <GoodsList goods={goods} />\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}